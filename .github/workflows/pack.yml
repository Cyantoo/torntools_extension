name: Pack new version
on:
  workflow_dispatch:
    inputs:
      new_version:
        description: "The new version to be used in New Changelog Entry(without 'v')"
        required: true
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update the changelog.js
        run: |
          firstEntryLineNo=2
          version="$(sed "${firstEntryLineNo}q;d" ./torntools/changelog.json | cut -d- -f1 | sed 's,^\t\"v,,' | tr -d ' ')"
          firstLineKey="$(sed "${firstEntryLineNo}"q\;d ./torntools/changelog.json | sed 's,^\t\",,' | sed 's,": {,,')"
          jqCommand="jq"
          echo "### Features" >> releaseBody.md
          if [[ "$(${jqCommand} ".[\"${firstLineKey}\"] | .[\"Features\"]" < ./torntools/changelog.json)" != "[]" ]]
          then
              "$jqCommand" ".[\"${firstLineKey}\"] | .Features | map(sub(\"^\";\"- \";\"m\"))" < ./torntools/changelog.json | sed "1,1d" | sed "$ d" | sed "s,^  \",," | sed "s:\"\,$::" | sed "s,\"$,," | while read -r line
              do
                  echo "$line" >> releaseBody.md
              done
          else
              echo "None" >> releaseBody.md
          fi
          echo "### Fixes" >> releaseBody.md
          if [[ "$(${jqCommand} ".[\"${firstLineKey}\"] | .Fixes" < ./torntools/changelog.json)" != "[]" ]]
          then
              "$jqCommand" ".[\"${firstLineKey}\"] | .Fixes | map(sub(\"^\";\"- \";\"m\"))" < ./torntools/changelog.json | sed "1,1d" | sed "$ d" | sed "s,^  \",," | sed "s:\"\,$::" | sed "s,\"$,," | while read -r line
              do
                  echo "$line" >> releaseBody.md
              done
          else
              echo "None" >> releaseBody.md
          fi
          echo "### Changes" >> releaseBody.md
          if [[ "$(${jqCommand} ".[\"${firstLineKey}\"] | .Changes" < ./torntools/changelog.json)" != "[]" ]]
          then
              "$jqCommand" ".[\"${firstLineKey}\"] | .Changes | map(sub(\"^\";\"- \";\"m\"))" < ./torntools/changelog.json | sed "1,1d" | sed "$ d" | sed "s,^  \",," | sed "s:\"\,$::" | sed "s,\"$,," | while read -r line
              do
                  echo "$line" >> releaseBody.md
              done
          else
              echo "None" >> releaseBody.md
          fi
          zip -q -r "torntools_${version}.zip" ./torntools/*
          mv "torntools_${version}.zip" ./versions/
          newChangelogEntries="\t\"v${{ github.event.inputs.new_version }} - xxxxx, xxth. $(date +%Y)\": \{\n\t\t\"Features\"\: [],\n\t\t\"Fixes\"\: [],\n\t\t\"Changes\"\: []\n\t\},"
          sed -i "${firstEntryLineNo}s>\t\"${firstLineKey}.*>${newChangelogEntries}\n\t\"v${version} - $(date +%B), $(date +%d)th. $(date +%Y)\"\ \:\ \{>" ./torntools/changelog.json
          export version
          echo "version=$version" >> "$GITHUB_ENV"
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: versions/torntools_${{ env.version }}.zip
          name: "Release: v${{ env.version }}"
          tag: "${{ env.version }}"
          bodyFile: "./releaseBody.md"
          token: ${{ secrets.GH_TOKEN }}
      - name: Delete temporary files
        run: rm -f releaseBody.md
      - name: Add & Commit
        uses: EndBug/add-and-commit@v7.0.0
        with:
          message: "Pack v${{ env.version }}"
